{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/eric/Documents/GitHub/astro-payload-mono/payload/node_modules/.pnpm/%40payloadcms%2Bui%403.11.0_%40types%2Breact%4019.0.1_monaco-editor%400.52.2_next%4015.1.0_react-dom%4019.0.0_r_xcet7chmsgr4ej7y3ssxeoyx7a/node_modules/%40payloadcms/ui/src/elements/TableColumns/filterFields.tsx","file:///home/eric/Documents/GitHub/astro-payload-mono/payload/node_modules/.pnpm/%40payloadcms%2Bui%403.11.0_%40types%2Breact%4019.0.1_monaco-editor%400.52.2_next%4015.1.0_react-dom%4019.0.0_r_xcet7chmsgr4ej7y3ssxeoyx7a/node_modules/%40payloadcms/ui/src/elements/TableColumns/getInitialColumns.ts","file:///home/eric/Documents/GitHub/astro-payload-mono/payload/node_modules/.pnpm/%40payloadcms%2Bui%403.11.0_%40types%2Breact%4019.0.1_monaco-editor%400.52.2_next%4015.1.0_react-dom%4019.0.0_r_xcet7chmsgr4ej7y3ssxeoyx7a/node_modules/%40payloadcms/ui/src/elements/Translation/index.tsx","file:///home/eric/Documents/GitHub/astro-payload-mono/payload/node_modules/.pnpm/%40payloadcms%2Bui%403.11.0_%40types%2Breact%4019.0.1_monaco-editor%400.52.2_next%4015.1.0_react-dom%4019.0.0_r_xcet7chmsgr4ej7y3ssxeoyx7a/node_modules/%40payloadcms/ui/src/elements/withMergedProps/index.tsx","file:///home/eric/Documents/GitHub/astro-payload-mono/payload/node_modules/.pnpm/%40payloadcms%2Bui%403.11.0_%40types%2Breact%4019.0.1_monaco-editor%400.52.2_next%4015.1.0_react-dom%4019.0.0_r_xcet7chmsgr4ej7y3ssxeoyx7a/node_modules/%40payloadcms/ui/src/elements/WithServerSideProps/index.tsx","file:///home/eric/Documents/GitHub/astro-payload-mono/payload/node_modules/.pnpm/%40payloadcms%2Bui%403.11.0_%40types%2Breact%4019.0.1_monaco-editor%400.52.2_next%4015.1.0_react-dom%4019.0.0_r_xcet7chmsgr4ej7y3ssxeoyx7a/node_modules/%40payloadcms/ui/src/fields/mergeFieldStyles.ts","file:///home/eric/Documents/GitHub/astro-payload-mono/payload/node_modules/.pnpm/%40payloadcms%2Bui%403.11.0_%40types%2Breact%4019.0.1_monaco-editor%400.52.2_next%4015.1.0_react-dom%4019.0.0_r_xcet7chmsgr4ej7y3ssxeoyx7a/node_modules/%40payloadcms/ui/src/forms/Form/reduceToSerializableFields.ts","file:///home/eric/Documents/GitHub/astro-payload-mono/payload/node_modules/.pnpm/%40payloadcms%2Bui%403.11.0_%40types%2Breact%4019.0.1_monaco-editor%400.52.2_next%4015.1.0_react-dom%4019.0.0_r_xcet7chmsgr4ej7y3ssxeoyx7a/node_modules/%40payloadcms/ui/src/graphics/Icon/index.tsx","file:///home/eric/Documents/GitHub/astro-payload-mono/payload/node_modules/.pnpm/%40payloadcms%2Bui%403.11.0_%40types%2Breact%4019.0.1_monaco-editor%400.52.2_next%4015.1.0_react-dom%4019.0.0_r_xcet7chmsgr4ej7y3ssxeoyx7a/node_modules/%40payloadcms/ui/src/graphics/Logo/index.tsx","file:///home/eric/Documents/GitHub/astro-payload-mono/payload/node_modules/.pnpm/%40payloadcms%2Bui%403.11.0_%40types%2Breact%4019.0.1_monaco-editor%400.52.2_next%4015.1.0_react-dom%4019.0.0_r_xcet7chmsgr4ej7y3ssxeoyx7a/node_modules/%40payloadcms/ui/src/utilities/abortAndIgnore.ts","file:///home/eric/Documents/GitHub/astro-payload-mono/payload/node_modules/.pnpm/%40payloadcms%2Bui%403.11.0_%40types%2Breact%4019.0.1_monaco-editor%400.52.2_next%4015.1.0_react-dom%4019.0.0_r_xcet7chmsgr4ej7y3ssxeoyx7a/node_modules/%40payloadcms/ui/src/utilities/api.ts","file:///home/eric/Documents/GitHub/astro-payload-mono/payload/node_modules/.pnpm/%40payloadcms%2Bui%403.11.0_%40types%2Breact%4019.0.1_monaco-editor%400.52.2_next%4015.1.0_react-dom%4019.0.0_r_xcet7chmsgr4ej7y3ssxeoyx7a/node_modules/%40payloadcms/ui/src/utilities/findLocaleFromCode.ts","file:///home/eric/Documents/GitHub/astro-payload-mono/payload/node_modules/.pnpm/%40payloadcms%2Bui%403.11.0_%40types%2Breact%4019.0.1_monaco-editor%400.52.2_next%4015.1.0_react-dom%4019.0.0_r_xcet7chmsgr4ej7y3ssxeoyx7a/node_modules/%40payloadcms/ui/src/utilities/formatAdminURL.ts","file:///home/eric/Documents/GitHub/astro-payload-mono/payload/node_modules/.pnpm/%40payloadcms%2Bui%403.11.0_%40types%2Breact%4019.0.1_monaco-editor%400.52.2_next%4015.1.0_react-dom%4019.0.0_r_xcet7chmsgr4ej7y3ssxeoyx7a/node_modules/%40payloadcms/ui/src/utilities/formatDate.ts","file:///home/eric/Documents/GitHub/astro-payload-mono/payload/node_modules/.pnpm/%40payloadcms%2Bui%403.11.0_%40types%2Breact%4019.0.1_monaco-editor%400.52.2_next%4015.1.0_react-dom%4019.0.0_r_xcet7chmsgr4ej7y3ssxeoyx7a/node_modules/%40payloadcms/ui/src/utilities/formatDocTitle.ts","file:///home/eric/Documents/GitHub/astro-payload-mono/payload/node_modules/.pnpm/%40payloadcms%2Bui%403.11.0_%40types%2Breact%4019.0.1_monaco-editor%400.52.2_next%4015.1.0_react-dom%4019.0.0_r_xcet7chmsgr4ej7y3ssxeoyx7a/node_modules/%40payloadcms/ui/src/utilities/groupNavItems.ts","file:///home/eric/Documents/GitHub/astro-payload-mono/payload/node_modules/.pnpm/%40payloadcms%2Bui%403.11.0_%40types%2Breact%4019.0.1_monaco-editor%400.52.2_next%4015.1.0_react-dom%4019.0.0_r_xcet7chmsgr4ej7y3ssxeoyx7a/node_modules/%40payloadcms/ui/src/utilities/handleBackToDashboard.tsx","file:///home/eric/Documents/GitHub/astro-payload-mono/payload/node_modules/.pnpm/%40payloadcms%2Bui%403.11.0_%40types%2Breact%4019.0.1_monaco-editor%400.52.2_next%4015.1.0_react-dom%4019.0.0_r_xcet7chmsgr4ej7y3ssxeoyx7a/node_modules/%40payloadcms/ui/src/utilities/handleGoBack.tsx","file:///home/eric/Documents/GitHub/astro-payload-mono/payload/node_modules/.pnpm/%40payloadcms%2Bui%403.11.0_%40types%2Breact%4019.0.1_monaco-editor%400.52.2_next%4015.1.0_react-dom%4019.0.0_r_xcet7chmsgr4ej7y3ssxeoyx7a/node_modules/%40payloadcms/ui/src/utilities/handleTakeOver.tsx","file:///home/eric/Documents/GitHub/astro-payload-mono/payload/node_modules/.pnpm/%40payloadcms%2Bui%403.11.0_%40types%2Breact%4019.0.1_monaco-editor%400.52.2_next%4015.1.0_react-dom%4019.0.0_r_xcet7chmsgr4ej7y3ssxeoyx7a/node_modules/%40payloadcms/ui/src/utilities/hasSavePermission.ts","file:///home/eric/Documents/GitHub/astro-payload-mono/payload/node_modules/.pnpm/%40payloadcms%2Bui%403.11.0_%40types%2Breact%4019.0.1_monaco-editor%400.52.2_next%4015.1.0_react-dom%4019.0.0_r_xcet7chmsgr4ej7y3ssxeoyx7a/node_modules/%40payloadcms/ui/src/utilities/isClientUserObject.ts","file:///home/eric/Documents/GitHub/astro-payload-mono/payload/node_modules/.pnpm/%40payloadcms%2Bui%403.11.0_%40types%2Breact%4019.0.1_monaco-editor%400.52.2_next%4015.1.0_react-dom%4019.0.0_r_xcet7chmsgr4ej7y3ssxeoyx7a/node_modules/%40payloadcms/ui/src/utilities/isEditing.ts","file:///home/eric/Documents/GitHub/astro-payload-mono/payload/node_modules/.pnpm/%40payloadcms%2Bui%403.11.0_%40types%2Breact%4019.0.1_monaco-editor%400.52.2_next%4015.1.0_react-dom%4019.0.0_r_xcet7chmsgr4ej7y3ssxeoyx7a/node_modules/%40payloadcms/ui/src/utilities/mergeListSearchAndWhere.ts","file:///home/eric/Documents/GitHub/astro-payload-mono/payload/node_modules/.pnpm/%40payloadcms%2Bui%403.11.0_%40types%2Breact%4019.0.1_monaco-editor%400.52.2_next%4015.1.0_react-dom%4019.0.0_r_xcet7chmsgr4ej7y3ssxeoyx7a/node_modules/%40payloadcms/ui/src/utilities/sanitizeID.ts"],"sourcesContent":["import type { ClientField, Field } from 'payload'\n\nimport { fieldIsHiddenOrDisabled, fieldIsID } from 'payload/shared'\n\n/**\n * Filters fields that are hidden, disabled, or have `disableListColumn` set to `true`\n * Does so recursively for `tabs` fields.\n */\nexport const filterFields = <T extends ClientField | Field>(incomingFields: T[]): T[] => {\n  const shouldSkipField = (field: T): boolean =>\n    (field.type !== 'ui' && fieldIsHiddenOrDisabled(field) && !fieldIsID(field)) ||\n    field?.admin?.disableListColumn === true\n\n  const fields: T[] = incomingFields?.reduce((acc, field) => {\n    if (shouldSkipField(field)) {\n      return acc\n    }\n\n    // extract top-level `tabs` fields and filter out the same\n    const formattedField: T =\n      field.type === 'tabs' && 'tabs' in field\n        ? {\n            ...field,\n            tabs: field.tabs.map((tab) => ({\n              ...tab,\n              fields: tab.fields.filter((tabField) => !shouldSkipField(tabField)),\n            })),\n          }\n        : field\n\n    acc.push(formattedField)\n\n    return acc\n  }, [])\n\n  return fields\n}\n","import type { ClientField, CollectionConfig, Field } from 'payload'\n\nimport { fieldAffectsData } from 'payload/shared'\n\nimport type { ColumnPreferences } from '../../providers/ListQuery/index.js'\n\nconst getRemainingColumns = <T extends ClientField[] | Field[]>(\n  fields: T,\n  useAsTitle: string,\n): ColumnPreferences =>\n  fields?.reduce((remaining, field) => {\n    if (fieldAffectsData(field) && field.name === useAsTitle) {\n      return remaining\n    }\n\n    if (!fieldAffectsData(field) && 'fields' in field) {\n      return [...remaining, ...getRemainingColumns(field.fields, useAsTitle)]\n    }\n\n    if (field.type === 'tabs' && 'tabs' in field) {\n      return [\n        ...remaining,\n        ...field.tabs.reduce(\n          (tabFieldColumns, tab) => [\n            ...tabFieldColumns,\n            ...('name' in tab ? [tab.name] : getRemainingColumns(tab.fields, useAsTitle)),\n          ],\n          [],\n        ),\n      ]\n    }\n\n    return [...remaining, field.name]\n  }, [])\n\n/**\n * Returns the initial columns to display in the table based on the following criteria:\n * 1. If `defaultColumns` is set in the collection config, use those columns\n * 2. Otherwise take `useAtTitle, if set, and the next 3 fields that are not hidden or disabled\n */\nexport const getInitialColumns = <T extends ClientField[] | Field[]>(\n  fields: T,\n  useAsTitle: CollectionConfig['admin']['useAsTitle'],\n  defaultColumns: CollectionConfig['admin']['defaultColumns'],\n): ColumnPreferences => {\n  let initialColumns = []\n\n  if (Array.isArray(defaultColumns) && defaultColumns.length >= 1) {\n    initialColumns = defaultColumns\n  } else {\n    if (useAsTitle) {\n      initialColumns.push(useAsTitle)\n    }\n\n    const remainingColumns = getRemainingColumns(fields, useAsTitle)\n\n    initialColumns = initialColumns.concat(remainingColumns)\n    initialColumns = initialColumns.slice(0, 4)\n  }\n\n  return initialColumns.map((column) => ({\n    accessor: column,\n    active: true,\n  }))\n}\n","import type { ClientTranslationKeys, TFunction } from '@payloadcms/translations'\n\nimport * as React from 'react'\n\nconst RecursiveTranslation: React.FC<{\n  elements?: Record<string, React.FC<{ children: React.ReactNode }>>\n  translationString: string\n}> = ({ elements, translationString }) => {\n  const regex = /(<[^>]+>.*?<\\/[^>]+>)/g\n  const sections = translationString.split(regex)\n\n  return (\n    <span>\n      {sections.map((section, index) => {\n        if (elements && section.startsWith('<') && section.endsWith('>')) {\n          const elementKey = section[1]\n          const Element = elements[elementKey]\n\n          if (Element) {\n            const regex = new RegExp(`<${elementKey}>(.*?)<\\/${elementKey}>`, 'g')\n            const children = section.replace(regex, (_, group) => group)\n\n            return (\n              <Element key={index}>\n                <RecursiveTranslation translationString={children} />\n              </Element>\n            )\n          }\n        }\n\n        return section\n      })}\n    </span>\n  )\n}\n\nexport type TranslationProps = {\n  elements?: Record<string, React.FC<{ children: React.ReactNode }>>\n  i18nKey: ClientTranslationKeys\n  t: TFunction\n  variables?: Record<string, unknown>\n}\n\nexport const Translation: React.FC<TranslationProps> = ({ elements, i18nKey, t, variables }) => {\n  const stringWithVariables = t(i18nKey, variables || {})\n\n  if (!elements) {\n    return stringWithVariables\n  }\n\n  return <RecursiveTranslation elements={elements} translationString={stringWithVariables} />\n}\n","import { isReactServerComponentOrFunction, serverProps } from 'payload/shared'\nimport React from 'react'\n\n/**\n * Creates a higher-order component (HOC) that merges predefined properties (`toMergeIntoProps`)\n * with any properties passed to the resulting component.\n *\n * Use this when you want to pre-specify some props for a component, while also allowing users to\n * pass in their own props. The HOC ensures the passed props and predefined props are combined before\n * rendering the original component.\n *\n * @example\n * const PredefinedComponent = getMergedPropsComponent({\n *   Component: OriginalComponent,\n *   toMergeIntoProps: { someExtraValue: 5 }\n * });\n * // Using <PredefinedComponent customProp=\"value\" /> will result in\n * // <OriginalComponent customProp=\"value\" someExtraValue={5} />\n *\n * @returns A higher-order component with combined properties.\n *\n * @param Component - The original component to wrap.\n * @param sanitizeServerOnlyProps - If true, server-only props will be removed from the merged props. @default true if the component is not a server component, false otherwise.\n * @param toMergeIntoProps - The properties to merge into the passed props.\n */\nexport function withMergedProps<ToMergeIntoProps, CompleteReturnProps>({\n  Component,\n  sanitizeServerOnlyProps,\n  toMergeIntoProps,\n}: {\n  Component: React.FC<CompleteReturnProps>\n  sanitizeServerOnlyProps?: boolean\n  toMergeIntoProps: ToMergeIntoProps\n}): React.FC<CompleteReturnProps> {\n  if (sanitizeServerOnlyProps === undefined) {\n    sanitizeServerOnlyProps = !isReactServerComponentOrFunction(Component)\n  }\n  // A wrapper around the args.Component to inject the args.toMergeArgs as props, which are merged with the passed props\n  const MergedPropsComponent: React.FC<CompleteReturnProps> = (passedProps) => {\n    const mergedProps = simpleMergeProps(passedProps, toMergeIntoProps) as CompleteReturnProps\n\n    if (sanitizeServerOnlyProps) {\n      serverProps.forEach((prop) => {\n        delete mergedProps[prop]\n      })\n    }\n\n    return <Component {...mergedProps} />\n  }\n\n  return MergedPropsComponent\n}\n\nfunction simpleMergeProps(props, toMerge) {\n  return { ...props, ...toMerge }\n}\n","import type { WithServerSidePropsComponent } from 'payload'\n\nimport { isReactServerComponentOrFunction } from 'payload/shared'\nimport React from 'react'\n\nexport const WithServerSideProps: WithServerSidePropsComponent = ({\n  Component,\n  serverOnlyProps,\n  ...rest\n}) => {\n  if (Component) {\n    const WithServerSideProps: React.FC = (passedProps) => {\n      const propsWithServerOnlyProps = {\n        ...passedProps,\n        ...(isReactServerComponentOrFunction(Component) ? (serverOnlyProps ?? {}) : {}),\n      }\n\n      return <Component {...propsWithServerOnlyProps} />\n    }\n\n    return WithServerSideProps(rest)\n  }\n\n  return null\n}\n","import type { ClientField } from 'payload'\n\nexport const mergeFieldStyles = (\n  field: ClientField | Omit<ClientField, 'type'>,\n): React.CSSProperties => ({\n  ...(field?.admin?.style || {}),\n  ...(field?.admin?.width\n    ? {\n        '--field-width': field.admin.width,\n      }\n    : {\n        flex: '1 1 auto',\n      }),\n  // allow flex overrides to still take precedence over the fallback\n  ...(field?.admin?.style?.flex\n    ? {\n        flex: field.admin.style.flex,\n      }\n    : {}),\n})\n","import { type FormField, type FormState } from 'payload'\nimport { deepCopyObjectComplex } from 'payload/shared'\n\ntype BlacklistedKeys = 'customComponents' | 'validate'\nconst blacklistedKeys: BlacklistedKeys[] = ['validate', 'customComponents']\n\nconst sanitizeField = (incomingField: FormField): FormField => {\n  const field = deepCopyObjectComplex(incomingField)\n\n  blacklistedKeys.forEach((key) => {\n    delete field[key]\n  })\n\n  return field\n}\n\n/* \n  Takes in FormState and removes fields that are not serializable.\n  Returns FormState without blacklisted keys.\n**/\nexport const reduceToSerializableFields = (\n  fields: FormState,\n): {\n  [key: string]: Omit<FormField, BlacklistedKeys>\n} => {\n  return Object.keys(fields).reduce(\n    (acc, key) => {\n      acc[key] = sanitizeField(fields[key])\n      return acc\n    },\n    {} as {\n      [key: string]: Omit<FormField, BlacklistedKeys>\n    },\n  )\n}\n","import React from 'react'\n\nexport const PayloadIcon: React.FC<{\n  fill?: string\n}> = ({ fill: fillFromProps }) => {\n  const fill = fillFromProps || 'var(--theme-elevation-1000)'\n\n  return (\n    <svg\n      className=\"graphic-icon\"\n      height=\"100%\"\n      viewBox=\"0 0 25 25\"\n      width=\"100%\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M11.8673 21.2336L4.40922 16.9845C4.31871 16.9309 4.25837 16.8355 4.25837 16.7282V10.1609C4.25837 10.0477 4.38508 9.97616 4.48162 10.0298L13.1404 14.9642C13.2611 15.0358 13.412 14.9464 13.412 14.8093V11.6091C13.412 11.4839 13.3456 11.3647 13.2309 11.2992L2.81624 5.36353C2.72573 5.30989 2.60505 5.30989 2.51454 5.36353L1.15085 6.14422C1.06034 6.19786 1 6.29321 1 6.40048V18.5995C1 18.7068 1.06034 18.8021 1.15085 18.8558L11.8491 24.9583C11.9397 25.0119 12.0603 25.0119 12.1509 24.9583L21.1355 19.8331C21.2562 19.7616 21.2562 19.5948 21.1355 19.5232L18.3357 17.9261C18.2211 17.8605 18.0883 17.8605 17.9737 17.9261L12.175 21.2336C12.0845 21.2872 11.9638 21.2872 11.8733 21.2336H11.8673Z\"\n        fill={fill}\n      />\n      <path\n        d=\"M22.8491 6.13827L12.1508 0.0417218C12.0603 -0.0119135 11.9397 -0.0119135 11.8491 0.0417218L6.19528 3.2658C6.0746 3.33731 6.0746 3.50418 6.19528 3.57569L8.97092 5.16091C9.08557 5.22647 9.21832 5.22647 9.33296 5.16091L11.8672 3.71872C11.9578 3.66508 12.0784 3.66508 12.1689 3.71872L19.627 7.96782C19.7175 8.02146 19.7778 8.11681 19.7778 8.22408V14.8212C19.7778 14.9464 19.8442 15.0656 19.9589 15.1311L22.7345 16.7104C22.8552 16.7819 23.006 16.6925 23.006 16.5554V6.40048C23.006 6.29321 22.9457 6.19786 22.8552 6.14423L22.8491 6.13827Z\"\n        fill={fill}\n      />\n    </svg>\n  )\n}\n","import React from 'react'\n\nconst css = `\n  .graphic-logo path {\n    fill: var(--theme-elevation-1000);\n  }\n`\n\nexport const PayloadLogo: React.FC = () => (\n  <svg\n    className=\"graphic-logo\"\n    fill=\"none\"\n    height=\"43.5\"\n    id=\"b\"\n    viewBox=\"0 0 193.38 43.5\"\n    width=\"193.38\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <style>{css}</style>\n    <g id=\"c\">\n      <path d=\"M18.01,35.63l-12.36-7.13c-.15-.09-.25-.25-.25-.43v-11.02c0-.19.21-.31.37-.22l14.35,8.28c.2.12.45-.03.45-.26v-5.37c0-.21-.11-.41-.3-.52L3.01,9c-.15-.09-.35-.09-.5,0l-2.26,1.31c-.15.09-.25.25-.25.43v20.47c0,.18.1.34.25.43l17.73,10.24c.15.09.35.09.5,0l14.89-8.6c.2-.12.2-.4,0-.52l-4.64-2.68c-.19-.11-.41-.11-.6,0l-9.61,5.55c-.15.09-.35.09-.5,0Z\" />\n      <path d=\"M36.21,10.3L18.48.07c-.15-.09-.35-.09-.5,0l-9.37,5.41c-.2.12-.2.4,0,.52l4.6,2.66c.19.11.41.11.6,0l4.2-2.42c.15-.09.35-.09.5,0l12.36,7.13c.15.09.25.25.25.43v11.07c0,.21.11.41.3.52l4.6,2.65c.2.12.45-.03.45-.26V10.74c0-.18-.1-.34-.25-.43Z\" />\n      <g id=\"d\">\n        <path d=\"M193.38,9.47c0,1.94-1.48,3.32-3.3,3.32s-3.31-1.39-3.31-3.32,1.49-3.31,3.31-3.31,3.3,1.39,3.3,3.31ZM192.92,9.47c0-1.68-1.26-2.88-2.84-2.88s-2.84,1.2-2.84,2.88,1.26,2.89,2.84,2.89,2.84-1.2,2.84-2.89ZM188.69,11.17v-3.51h1.61c.85,0,1.35.39,1.35,1.15,0,.53-.3.86-.67,1.02l.79,1.35h-.89l-.72-1.22h-.64v1.22h-.82ZM190.18,9.31c.46,0,.64-.16.64-.5s-.19-.49-.64-.49h-.67v.99h.67Z\" />\n        <path d=\"M54.72,24.84v10.93h-5.4V6.1h12.26c7.02,0,11.1,3.2,11.1,9.39s-4.07,9.35-11.06,9.35h-6.9,0ZM61.12,20.52c4.07,0,6.11-1.66,6.11-5.03s-2.04-5.03-6.11-5.03h-6.4v10.06h6.4Z\" />\n        <path d=\"M85.94,32.45c-1,2.41-3.66,3.78-7.02,3.78-4.11,0-7.11-2.29-7.11-6.11,0-4.24,3.32-5.98,7.61-6.48l6.32-.71v-1c0-2.58-1.58-3.82-3.99-3.82s-3.74,1.29-3.91,3.24h-5.11c.46-4.53,3.99-7.19,9.18-7.19,5.74,0,9.02,2.7,9.02,8.19v8.15c0,1.95.08,3.58.42,5.28h-5.11c-.21-1.16-.29-2.29-.29-3.32h0ZM85.73,27.58v-1.29l-4.7.54c-2.24.29-3.95.79-3.95,2.99,0,1.66,1.16,2.7,3.28,2.7,2.74,0,5.36-1.62,5.36-4.95h0Z\" />\n        <path d=\"M90.39,14.66h5.4l5.86,15.92h.08l5.57-15.92h5.28l-8.23,21.49c-2,5.28-4.45,7.32-8.89,7.36-.71,0-1.7-.08-2.45-.21v-4.03c.62.13.96.13,1.41.13,2.16,0,3.07-.75,4.2-3.66l-8.23-21.07h0Z\" />\n        <path d=\"M113.46,35.77V6.1h5.32v29.67h-5.32Z\" />\n        <path d=\"M130.79,36.27c-6.23,0-10.68-4.2-10.68-11.05s4.45-11.05,10.68-11.05,10.68,4.24,10.68,11.05-4.45,11.05-10.68,11.05ZM130.79,32.32c3.41,0,5.36-2.66,5.36-7.11s-1.95-7.11-5.36-7.11-5.36,2.7-5.36,7.11,1.91,7.11,5.36,7.11Z\" />\n        <path d=\"M156.19,32.45c-1,2.41-3.66,3.78-7.02,3.78-4.11,0-7.11-2.29-7.11-6.11,0-4.24,3.32-5.98,7.61-6.48l6.32-.71v-1c0-2.58-1.58-3.82-3.99-3.82s-3.74,1.29-3.91,3.24h-5.11c.46-4.53,3.99-7.19,9.19-7.19,5.74,0,9.02,2.7,9.02,8.19v8.15c0,1.95.08,3.58.42,5.28h-5.11c-.21-1.16-.29-2.29-.29-3.32h0ZM155.98,27.58v-1.29l-4.7.54c-2.24.29-3.95.79-3.95,2.99,0,1.66,1.16,2.7,3.28,2.7,2.74,0,5.36-1.62,5.36-4.95h0Z\" />\n        <path d=\"M178.5,32.41c-1.04,2.12-3.58,3.87-6.78,3.87-5.53,0-9.31-4.49-9.31-11.05s3.78-11.05,9.31-11.05c3.28,0,5.69,1.83,6.69,3.95V6.1h5.32v29.67h-5.24v-3.37h0ZM178.55,24.84c0-4.11-1.95-6.78-5.32-6.78s-5.45,2.83-5.45,7.15,2,7.15,5.45,7.15,5.32-2.66,5.32-6.78v-.75h0Z\" />\n      </g>\n    </g>\n  </svg>\n)\n","export function abortAndIgnore(controller: AbortController) {\n  if (controller) {\n    try {\n      controller.abort()\n    } catch (_err) {\n      // swallow error\n    }\n  }\n}\n","import * as qs from 'qs-esm'\n\ntype GetOptions = {\n  params?: Record<string, unknown>\n} & RequestInit\n\nexport const requests = {\n  delete: (url: string, options: RequestInit = { headers: {} }): Promise<Response> => {\n    const headers = options && options.headers ? { ...options.headers } : {}\n\n    const formattedOptions: RequestInit = {\n      ...options,\n      credentials: 'include',\n      headers: {\n        ...headers,\n      },\n      method: 'delete',\n    }\n\n    return fetch(url, formattedOptions)\n  },\n\n  get: (url: string, options: GetOptions = { headers: {} }): Promise<Response> => {\n    let query = ''\n    if (options.params) {\n      query = qs.stringify(options.params, { addQueryPrefix: true })\n    }\n    return fetch(`${url}${query}`, {\n      credentials: 'include',\n      ...options,\n    })\n  },\n\n  patch: (url: string, options: RequestInit = { headers: {} }): Promise<Response> => {\n    const headers = options && options.headers ? { ...options.headers } : {}\n\n    const formattedOptions: RequestInit = {\n      ...options,\n      credentials: 'include',\n      headers: {\n        ...headers,\n      },\n      method: 'PATCH',\n    }\n\n    return fetch(url, formattedOptions)\n  },\n\n  post: (url: string, options: RequestInit = { headers: {} }): Promise<Response> => {\n    const headers = options && options.headers ? { ...options.headers } : {}\n\n    const formattedOptions: RequestInit = {\n      ...options,\n      credentials: 'include',\n      headers: {\n        ...headers,\n      },\n      method: 'post',\n    }\n\n    return fetch(`${url}`, formattedOptions)\n  },\n\n  put: (url: string, options: RequestInit = { headers: {} }): Promise<Response> => {\n    const headers = options && options.headers ? { ...options.headers } : {}\n\n    const formattedOptions: RequestInit = {\n      ...options,\n      credentials: 'include',\n      headers: {\n        ...headers,\n      },\n      method: 'put',\n    }\n\n    return fetch(url, formattedOptions)\n  },\n}\n","import type { Locale, SanitizedLocalizationConfig } from 'payload'\n/*\n return the Locale for given locale code, else return null\n*/\nexport const findLocaleFromCode = (\n  localizationConfig: SanitizedLocalizationConfig,\n  locale: string,\n): Locale | null => {\n  if (!localizationConfig?.locales || localizationConfig.locales.length === 0) {\n    return null\n  }\n\n  return localizationConfig.locales.find((el) => el?.code === locale)\n}\n","import type { Config } from 'payload'\n\n/** Will read the `routes.admin` config and appropriately handle `\"/\"` admin paths */\nexport const formatAdminURL = (args: {\n  adminRoute: Config['routes']['admin']\n  basePath?: string\n  path: string\n  serverURL?: Config['serverURL']\n}): string => {\n  const { adminRoute, basePath = '', path, serverURL } = args\n\n  if (adminRoute) {\n    if (adminRoute === '/') {\n      if (!path) {\n        return `${serverURL || ''}${basePath}${adminRoute}`\n      }\n    } else {\n      return `${serverURL || ''}${basePath}${adminRoute}${path}`\n    }\n  }\n\n  return `${serverURL || ''}${basePath}${path}`\n}\n","import type { I18n } from '@payloadcms/translations'\n\nimport { format, formatDistanceToNow } from 'date-fns'\n\ntype FormatDateArgs = {\n  date: Date | number | string | undefined\n  i18n: I18n<any, any>\n  pattern: string\n}\n\nexport const formatDate = ({ date, i18n, pattern }: FormatDateArgs): string => {\n  const theDate = new Date(date)\n  return format(theDate, pattern, { locale: i18n.dateFNS })\n}\n\ntype FormatTimeToNowArgs = {\n  date: Date | number | string | undefined\n  i18n: I18n<any, any>\n}\n\nexport const formatTimeToNow = ({ date, i18n }: FormatTimeToNowArgs): string => {\n  const theDate = new Date(date)\n  return formatDistanceToNow(theDate, { locale: i18n.dateFNS })\n}\n","import type { I18n } from '@payloadcms/translations'\nimport type {\n  ClientCollectionConfig,\n  ClientGlobalConfig,\n  SanitizedConfig,\n  TypeWithID,\n} from 'payload'\n\nimport { getTranslation } from '@payloadcms/translations'\n\nimport { formatDate } from '../utilities/formatDate.js'\n\nexport const formatDocTitle = ({\n  collectionConfig,\n  data,\n  dateFormat: dateFormatFromConfig,\n  fallback,\n  globalConfig,\n  i18n,\n}: {\n  collectionConfig?: ClientCollectionConfig\n  data: TypeWithID\n  dateFormat: SanitizedConfig['admin']['dateFormat']\n  fallback?: string\n  globalConfig?: ClientGlobalConfig\n  i18n: I18n<any, any>\n}): string => {\n  let title: string\n\n  if (collectionConfig) {\n    const useAsTitle = collectionConfig?.admin?.useAsTitle\n\n    if (useAsTitle) {\n      title = data?.[useAsTitle] || title\n\n      if (title) {\n        const fieldConfig = collectionConfig.fields.find(\n          (f) => 'name' in f && f.name === useAsTitle,\n        )\n\n        const isDate = fieldConfig?.type === 'date'\n\n        if (isDate) {\n          const dateFormat =\n            ('date' in fieldConfig.admin && fieldConfig?.admin?.date?.displayFormat) ||\n            dateFormatFromConfig\n          title = formatDate({ date: title, i18n, pattern: dateFormat }) || title\n        }\n      }\n    }\n  }\n\n  if (globalConfig) {\n    title = getTranslation(globalConfig?.label, i18n) || globalConfig?.slug\n  }\n\n  if (!title) {\n    title = fallback || `[${i18n.t('general:untitled')}]`\n  }\n\n  return title\n}\n","import type { I18nClient } from '@payloadcms/translations'\nimport type {\n  SanitizedCollectionConfig,\n  SanitizedGlobalConfig,\n  SanitizedPermissions,\n  StaticLabel,\n} from 'payload'\n\nimport { getTranslation } from '@payloadcms/translations'\n\nexport enum EntityType {\n  collection = 'collections',\n  global = 'globals',\n}\n\nexport type EntityToGroup =\n  | {\n      entity: SanitizedCollectionConfig\n      type: EntityType.collection\n    }\n  | {\n      entity: SanitizedGlobalConfig\n      type: EntityType.global\n    }\n\nexport type NavGroupType = {\n  entities: {\n    label: StaticLabel\n    slug: string\n    type: EntityType\n  }[]\n  label: string\n}\n\nexport function groupNavItems(\n  entities: EntityToGroup[],\n  permissions: SanitizedPermissions,\n  i18n: I18nClient,\n): NavGroupType[] {\n  const result = entities.reduce(\n    (groups, entityToGroup) => {\n      // Skip entities where admin.group is explicitly false\n      if (entityToGroup.entity?.admin?.group === false) {\n        return groups\n      }\n\n      if (permissions?.[entityToGroup.type.toLowerCase()]?.[entityToGroup.entity.slug]?.read) {\n        const translatedGroup = getTranslation(entityToGroup.entity.admin.group, i18n)\n\n        const labelOrFunction =\n          'labels' in entityToGroup.entity\n            ? entityToGroup.entity.labels.plural\n            : entityToGroup.entity.label\n\n        const label =\n          typeof labelOrFunction === 'function' ? labelOrFunction({ t: i18n.t }) : labelOrFunction\n\n        if (entityToGroup.entity.admin.group) {\n          const existingGroup = groups.find(\n            (group) => getTranslation(group.label, i18n) === translatedGroup,\n          ) as NavGroupType\n\n          let matchedGroup: NavGroupType = existingGroup\n\n          if (!existingGroup) {\n            matchedGroup = { entities: [], label: translatedGroup }\n            groups.push(matchedGroup)\n          }\n\n          matchedGroup.entities.push({\n            slug: entityToGroup.entity.slug,\n            type: entityToGroup.type,\n            label,\n          })\n        } else {\n          const defaultGroup = groups.find((group) => {\n            return getTranslation(group.label, i18n) === i18n.t(`general:${entityToGroup.type}`)\n          }) as NavGroupType\n          defaultGroup.entities.push({\n            slug: entityToGroup.entity.slug,\n            type: entityToGroup.type,\n            label,\n          })\n        }\n      }\n\n      return groups\n    },\n    [\n      {\n        entities: [],\n        label: i18n.t('general:collections'),\n      },\n      {\n        entities: [],\n        label: i18n.t('general:globals'),\n      },\n    ],\n  )\n\n  return result.filter((group) => group.entities.length > 0)\n}\n","import type { AppRouterInstance } from 'next/dist/shared/lib/app-router-context.shared-runtime.js'\n\nimport { formatAdminURL } from './formatAdminURL.js'\n\ntype BackToDashboardProps = {\n  adminRoute: string\n  router: AppRouterInstance\n}\n\nexport const handleBackToDashboard = ({ adminRoute, router }: BackToDashboardProps) => {\n  const redirectRoute = formatAdminURL({\n    adminRoute,\n    path: '/',\n  })\n  router.push(redirectRoute)\n}\n","import type { AppRouterInstance } from 'next/dist/shared/lib/app-router-context.shared-runtime.js'\n\nimport { formatAdminURL } from './formatAdminURL.js'\n\ntype GoBackProps = {\n  adminRoute: string\n  collectionSlug: string\n  router: AppRouterInstance\n}\n\nexport const handleGoBack = ({ adminRoute, collectionSlug, router }: GoBackProps) => {\n  const redirectRoute = formatAdminURL({\n    adminRoute,\n    path: collectionSlug ? `/collections/${collectionSlug}` : '/',\n  })\n  router.push(redirectRoute)\n}\n","import type { ClientUser } from 'payload'\n\nexport const handleTakeOver = (\n  id: number | string,\n  collectionSlug: string,\n  globalSlug: string,\n  user: ClientUser | number | string,\n  isWithinDoc: boolean,\n  updateDocumentEditor: (\n    docID: number | string,\n    slug: string,\n    user: ClientUser | number | string,\n  ) => Promise<void>,\n  setCurrentEditor: (value: React.SetStateAction<ClientUser | number | string>) => void,\n  documentLockStateRef: React.RefObject<{\n    hasShownLockedModal: boolean\n    isLocked: boolean\n    user: ClientUser | number | string\n  }>,\n  isLockingEnabled: boolean,\n  setIsReadOnlyForIncomingUser?: (value: React.SetStateAction<boolean>) => void,\n): void => {\n  if (!isLockingEnabled) {\n    return\n  }\n\n  try {\n    // Call updateDocumentEditor to update the document's owner to the current user\n    void updateDocumentEditor(id, collectionSlug ?? globalSlug, user)\n\n    if (!isWithinDoc) {\n      documentLockStateRef.current.hasShownLockedModal = true\n    }\n\n    // Update the locked state to reflect the current user as the owner\n    documentLockStateRef.current = {\n      hasShownLockedModal: documentLockStateRef.current?.hasShownLockedModal,\n      isLocked: true,\n      user,\n    }\n    setCurrentEditor(user)\n\n    // If this is a takeover within the document, ensure the document is editable\n    if (isWithinDoc && setIsReadOnlyForIncomingUser) {\n      setIsReadOnlyForIncomingUser(false)\n    }\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.error('Error during document takeover:', error)\n  }\n}\n","import type {\n  SanitizedCollectionPermission,\n  SanitizedDocumentPermissions,\n  SanitizedGlobalPermission,\n} from 'payload'\n\nexport const hasSavePermission = (args: {\n  /*\n   * Pass either `collectionSlug` or `globalSlug`\n   */\n  collectionSlug?: string\n  docPermissions: SanitizedDocumentPermissions\n  /*\n   * Pass either `collectionSlug` or `globalSlug`\n   */\n  globalSlug?: string\n  isEditing: boolean\n}) => {\n  const { collectionSlug, docPermissions, globalSlug, isEditing } = args\n\n  if (collectionSlug) {\n    return Boolean(\n      (isEditing && docPermissions?.update) ||\n        (!isEditing && (docPermissions as SanitizedCollectionPermission)?.create),\n    )\n  }\n\n  if (globalSlug) {\n    return Boolean((docPermissions as SanitizedGlobalPermission)?.update)\n  }\n\n  return false\n}\n","import type { ClientUser } from 'payload'\n\nexport const isClientUserObject = (user): user is ClientUser => {\n  return user && typeof user === 'object'\n}\n","export const isEditing = ({\n  id,\n  collectionSlug,\n  globalSlug,\n}: {\n  collectionSlug?: string\n  globalSlug?: string\n  id?: number | string\n}): boolean => Boolean(globalSlug || (collectionSlug && !!id))\n","import type { ClientCollectionConfig, SanitizedCollectionConfig, Where } from 'payload'\n\nconst isEmptyObject = (obj: object) => Object.keys(obj).length === 0\n\nexport const hoistQueryParamsToAnd = (currentWhere: Where, incomingWhere: Where) => {\n  if (isEmptyObject(incomingWhere)) {\n    return currentWhere\n  }\n\n  if (isEmptyObject(currentWhere)) {\n    return incomingWhere\n  }\n\n  if ('and' in currentWhere) {\n    currentWhere.and.push(incomingWhere)\n  } else if ('or' in currentWhere) {\n    currentWhere = {\n      and: [currentWhere, incomingWhere],\n    }\n  } else {\n    currentWhere = {\n      and: [currentWhere, incomingWhere],\n    }\n  }\n\n  return currentWhere\n}\n\ntype Args = {\n  collectionConfig: ClientCollectionConfig | SanitizedCollectionConfig\n  search: string\n  where?: Where\n}\n\nexport const mergeListSearchAndWhere = ({ collectionConfig, search, where = {} }: Args): Where => {\n  if (search) {\n    let copyOfWhere = { ...(where || {}) }\n\n    const searchAsConditions = (\n      collectionConfig.admin.listSearchableFields || [collectionConfig.admin?.useAsTitle || 'id']\n    ).map((fieldName) => ({\n      [fieldName]: {\n        like: search,\n      },\n    }))\n\n    if (searchAsConditions.length > 0) {\n      copyOfWhere = hoistQueryParamsToAnd(copyOfWhere, {\n        or: searchAsConditions,\n      })\n    }\n\n    if (!isEmptyObject(copyOfWhere)) {\n      where = copyOfWhere\n    }\n  }\n\n  return where\n}\n","export function sanitizeID(id: number | string): number | string {\n  if (id === undefined) {\n    return id\n  }\n\n  if (typeof id === 'number') {\n    return id\n  }\n\n  return decodeURIComponent(id)\n}\n"],"names":["fieldIsHiddenOrDisabled","fieldIsID","filterFields","incomingFields","shouldSkipField","field","acc","formattedField","tab","tabField","fieldAffectsData","getRemainingColumns","fields","useAsTitle","remaining","field","tabFieldColumns","tab","getInitialColumns","defaultColumns","initialColumns","remainingColumns","column","React","RecursiveTranslation","elements","translationString","regex","sections","section","index","elementKey","Element","children","_","group","Translation","i18nKey","t","variables","stringWithVariables","isReactServerComponentOrFunction","serverProps","React","withMergedProps","Component","sanitizeServerOnlyProps","toMergeIntoProps","passedProps","mergedProps","simpleMergeProps","prop","props","toMerge","isReactServerComponentOrFunction","React","WithServerSideProps","Component","serverOnlyProps","rest","passedProps","propsWithServerOnlyProps","mergeFieldStyles","field","deepCopyObjectComplex","blacklistedKeys","sanitizeField","incomingField","field","key","reduceToSerializableFields","fields","acc","React","PayloadIcon","fillFromProps","fill","React","css","PayloadLogo","abortAndIgnore","controller","qs","requests","url","options","headers","formattedOptions","query","findLocaleFromCode","localizationConfig","locale","el","formatAdminURL","args","adminRoute","basePath","path","serverURL","format","formatDistanceToNow","formatDate","date","i18n","pattern","theDate","getTranslation","formatDocTitle","collectionConfig","data","dateFormatFromConfig","fallback","globalConfig","i18n","title","useAsTitle","fieldConfig","f","dateFormat","formatDate","getTranslation","getTranslation","EntityType","groupNavItems","entities","permissions","i18n","groups","entityToGroup","translatedGroup","labelOrFunction","label","existingGroup","group","matchedGroup","handleBackToDashboard","adminRoute","router","redirectRoute","formatAdminURL","handleGoBack","adminRoute","collectionSlug","router","redirectRoute","formatAdminURL","handleTakeOver","id","collectionSlug","globalSlug","user","isWithinDoc","updateDocumentEditor","setCurrentEditor","documentLockStateRef","isLockingEnabled","setIsReadOnlyForIncomingUser","error","hasSavePermission","args","collectionSlug","docPermissions","globalSlug","isEditing","isClientUserObject","user","isEditing","id","collectionSlug","globalSlug","isEmptyObject","obj","hoistQueryParamsToAnd","currentWhere","incomingWhere","mergeListSearchAndWhere","collectionConfig","search","where","copyOfWhere","searchAsConditions","fieldName","sanitizeID","id"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23]}},
    {"offset": {"line": 428, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}